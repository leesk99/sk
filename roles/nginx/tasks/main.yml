---

- include: multi_os.yml

- include_tasks: RedHat.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution != 'Fedora'

- name: Create a docker network
  docker_network:
    name: "{{ docker_network_name }}"
  vars:
    ansible_python_interpreter: /usr/bin/python2.7

- name: "Create the {{ nginx_base_directory }} directory on the host"
  file:
    path: "{{ nginx_base_directory }}"
    state: 'directory'
    mode: '0755'

- name: "Create the {{ nginx_sites_enabled_path }} directory on the host"
  file:
    path: "{{ nginx_sites_enabled_path }}"
    state: 'directory'
    mode: '0755'

- name: 'Put the nginx.conf file in place'
  copy:
    content: "{{ nginx_conf }}"
    dest: "{{ nginx_base_directory }}/nginx.conf"
    mode: '0644'
  notify: 'restart-docker-nginx'

- name: "Copy the default html contents to {{ nginx_base_directory }}/defaults on the host"
  copy:
    src: "{{ nginx_static_html_directory }}/"
    dest: "{{ nginx_base_directory }}/defaults"
    mode: '0644'
  notify: 'restart-docker-nginx'

- name: create directory for conf.d nginx
  file:
    path: "{{ nginx_reverse_proxy_config_directory }}"
    state: directory

- name: Copy general-security-headers.conf file to conf.d
  template:
    src: general-security-headers.conf
    dest: "{{ nginx_reverse_proxy_config_directory }}"

- name: Copy default.conf file to conf.d
  template:
    src: default.conf
    dest: "{{ nginx_reverse_proxy_config_directory }}"
# #########################################################################################################
- name: deploy SSL/TLS cert.pem
  template:
    src: cert.pem
    dest: "{{ nginx_ssl_certificate_path }}"

- name: deploy SSL/TLS key.pem
  template:
    src: key.pem
    dest: "{{ nginx_ssl_certificate_key_path }}"
#############################################################################################################
- name: deploy server.rewrite
  template:
    src: server.rewrites.j2
    dest: "{{ nginx_reverse_proxy_config_directory }}/server.rewrites"

- name: deploy reverse proxy configurations
  template:
    src: backend.conf.j2
    dest: "{{ nginx_sites_enabled_path }}/{{ item.config_name }}.conf"
  with_items: "{{ nginx_reverse_proxy_proxies }}"
  notify: 'restart-docker-nginx'
###########################################################################################################
- name: Start the nginx docker container
  docker_container:
    image: "nginx:{{ nginx_docker_tag }}"
    networks:
      - name: "{{ docker_network_name }}"
    name: "{{ nginx_container_name }}"
    volumes: '{{ nginx_exposed_volumes }}'
    ports: '{{ nginx_published_ports }}'
    exposed_ports: '{{ nginx_exposed_ports }}'
    state: 'started'
    restart_policy: 'no'
  vars:
    ansible_python_interpreter: /usr/bin/python3
- include_tasks: test.yml

